{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./lib/initApollo.tsx","webpack:///./lib/isBrowser.tsx","webpack:///./lib/withApollo.tsx","webpack:///./pages/_app.tsx","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"apollo-boost\"","webpack:///external \"apollo-link-context\"","webpack:///external \"apollo-link-http\"","webpack:///external \"cookie\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/app\"","webpack:///external \"next/head\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {\n  ApolloClient,\n  InMemoryCache,\n  NormalizedCacheObject,\n} from 'apollo-boost';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport fetch from 'isomorphic-unfetch';\nimport { isBrowser } from './isBrowser';\n\nlet apolloClient: ApolloClient<NormalizedCacheObject> | null = null;\n\n// Polyfill fetch() on the server (used by apollo-client)\nif (!isBrowser) {\n  (global as any).fetch = fetch;\n}\n\ninterface Options {\n  getToken: () => string;\n}\n\nfunction create(initialState: any, { getToken }: Options) {\n  const httpLink = createHttpLink({\n    uri: 'http://localhost:4000/graphql',\n    credentials: 'include',\n  });\n\n  const authLink = setContext((_, { headers }) => {\n    const token = getToken();\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `qid=${token}` : '',\n      },\n    };\n  });\n\n  // Check out https://github.com/zeit/next.js/pull/4611 if you want to use the AWSAppSyncClient\n  return new ApolloClient({\n    connectToDevTools: isBrowser,\n    ssrMode: !isBrowser, // Disables forceFetch on the server (so queries are only run once)\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache().restore(initialState || {}),\n  });\n}\n\nexport default function initApollo(initialState: any, options: Options) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!isBrowser) {\n    return create(initialState, options);\n  }\n\n  // Reuse client on the client-side\n  if (!apolloClient) {\n    apolloClient = create(initialState, options);\n  }\n\n  return apolloClient;\n}\n","export const isBrowser: boolean = (process as any).browser;\n","import React from 'react';\nimport cookie from 'cookie';\nimport PropTypes from 'prop-types';\nimport { getDataFromTree } from 'react-apollo';\nimport Head from 'next/head';\n\nimport initApollo from './initApollo';\nimport { isBrowser } from './isBrowser';\nimport { ApolloClient, NormalizedCacheObject } from 'apollo-boost';\n\nfunction parseCookies(req?: any, options = {}) {\n  return cookie.parse(\n    req ? req.headers.cookie || '' : document.cookie,\n    options,\n  );\n}\n\nexport default (App: any) => {\n  return class WithData extends React.Component {\n    static displayName = `WithData(${App.displayName})`;\n    static propTypes = {\n      apolloState: PropTypes.object.isRequired,\n    };\n\n    static async getInitialProps(ctx: any) {\n      const {\n        Component,\n        router,\n        ctx: { req, res },\n      } = ctx;\n      const apollo = initApollo(\n        {},\n        {\n          getToken: () => parseCookies(req).token,\n        },\n      );\n\n      ctx.ctx.apolloClient = apollo;\n\n      let appProps = {};\n      if (App.getInitialProps) {\n        appProps = await App.getInitialProps(ctx);\n      }\n\n      if (res && res.finished) {\n        // When redirecting, the response is finished.\n        // No point in continuing to render\n        return {};\n      }\n\n      if (!isBrowser) {\n        // Run all graphql queries in the component tree\n        // and extract the resulting data\n        try {\n          // Run all GraphQL queries\n          await getDataFromTree(\n            <App\n              {...appProps}\n              Component={Component}\n              router={router}\n              apolloClient={apollo}\n            />,\n          );\n        } catch (error) {\n          // Prevent Apollo Client GraphQL errors from crashing SSR.\n          // Handle them in components via the data.error prop:\n          // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\n          console.error('Error while running `getDataFromTree`', error);\n        }\n\n        // getDataFromTree does not call componentWillUnmount\n        // head side effect therefore need to be cleared manually\n        Head.rewind();\n      }\n\n      // Extract query data from the Apollo's store\n      const apolloState = apollo.cache.extract();\n\n      return {\n        ...appProps,\n        apolloState,\n      };\n    }\n\n    apolloClient: ApolloClient<NormalizedCacheObject>;\n\n    constructor(props: any) {\n      super(props);\n      // `getDataFromTree` renders the component first, the client is passed off as a property.\n      // After that rendering is done using Next's normal rendering pipeline\n      this.apolloClient = initApollo(props.apolloState, {\n        getToken: () => {\n          return parseCookies().token;\n        },\n      });\n    }\n\n    render() {\n      return <App {...this.props} apolloClient={this.apolloClient} />;\n    }\n  };\n};\n","import App, { Container } from 'next/app';\nimport React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport withApollo from '../lib/withApollo';\n\nclass MyApp extends App<any> {\n  render() {\n    const { Component, pageProps, apolloClient } = this.props;\n    return (\n      <Container>\n        <ApolloProvider client={apolloClient}>\n          <Component {...pageProps} />\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withApollo(MyApp);\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"apollo-boost\");","module.exports = require(\"apollo-link-context\");","module.exports = require(\"apollo-link-http\");","module.exports = require(\"cookie\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/app\");","module.exports = require(\"next/head\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3DA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAQA;AAIA;AAGA;AAAA;AAAA;AADA;AAKA;AAEA;AACA;AAtBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAuBA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAwCA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvCA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA8CA;AACA;AACA;AACA;AACA;AAlDA;AAoDA;AACA;AACA;AACA;AAvDA;AAyDA;AACA;AA1DA;AA8DA;AA9DA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAmEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAJA;AASA;AACA;AA9EA;AAAA;AAAA;AAgFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjFA;AACA;AADA;AAAA;AAGA;AADA;AAiFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAVA;AACA;AAYA;;;;;;;;;;;;;;;;;;;;;;;AClBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}